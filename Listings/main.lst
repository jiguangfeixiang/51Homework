C51 COMPILER V9.54   MAIN                                                                  12/24/2024 17:11:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\app\keil_51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver\Include) DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "LCD1602.h"
   3          #include "port.h"
   4          #include "DS18B20.h"
   5          #include "Delay.h"
   6          #include <stdio.h>
   7          #include "DS1302.h"
   8          #include "AT24C02.h"
   9          #include "UART.h"
  10          #include "string.h"
  11          #include <stdlib.h>
  12          void Read_Temp();
  13          void Temp_Show();
  14          void TimeShow(void);
  15          void Night_Off_RL1(void);
  16          void Send_Temp_History();
  17          void Save_Data();
  18          uchar *Read_Data();
  19          float T = 0, last_T = 0;
  20          char FLASH_SIZE         = 0;
  21          unsigned char CharCount = 0;
  22          uchar tmp_show[10];
  23          uchar count = 0, night_flag = 0;
  24          int main()
  25          {
  26   1          Read_Temp();
  27   1          // Save_Data(); // 温度不一样就开始存储到Flash芯片里 时间格式24:60:60  T(4位)
  28   1          LCD_Init();
  29   1          UART_Init();
  30   1          DS1302_Init();
  31   1          DS1302_SetTime();
  32   1          LCD_ShowString(2, 1, "  :  :  ");
  33   1          while (1) {
  34   2              // 时间展示
  35   2              TimeShow();
  36   2              // 温度展示
  37   2              Temp_Show();
  38   2              // 夜晚控制
  39   2              Night_Off_RL1();
  40   2              // 温度不一样就存储到FLASH中
  41   2              if (T != last_T) {
  42   3      
  43   3                  Save_Data();
  44   3              }
  45   2              // 接收到AT指令就把温度历史记录发送给串口终端
  46   2              // Send_Temp_History();
  47   2              Read_Data();
  48   2          }
  49   1      }
  50          // void Send_Temp_History()
  51          // {
  52          //     char *SendString;
  53          //     Receive_String = UART_GetString();
  54          //     if (strstr(Receive_String, "AT+T")) {
C51 COMPILER V9.54   MAIN                                                                  12/24/2024 17:11:04 PAGE 2   

  55          //         SendString = Read_Data();
  56          //         LCD_ShowString(2, 1, SendString);
  57          //         UART_SendString(SendString);
  58          //         UART_SendString("\r\n");
  59          //     }
  60          // }
  61          void Save_Data()
  62          {
  63   1          uchar i;
  64   1          uchar temp_show_size = 0;
  65   1          sprintf((char *)tmp_show, "%.0f|", T);
  66   1          temp_show_size = strlen(tmp_show);
  67   1          for (i = 0; tmp_show[i] != '\0'; i++) {
  68   2              // 为了保持演示效果，35-55我存入，否则一些混乱数据就存进去了
  69   2              if (T >= 35 && T <= 55) {
  70   3                  AT24C02_WriteByte(FLASH_SIZE, tmp_show[i]);
  71   3                  Delay(10);
  72   3                  FLASH_SIZE++;
  73   3              }
  74   2          }
  75   1          last_T = T;
  76   1          // char *test = "abcd";
  77   1          // char c;
  78   1          // char disp[2];
  79   1          // for (i = 0; test[i] != '\0'; i++) {
  80   1          //     AT24C02_WriteByte(i, test[i]);
  81   1          //     Delay(10);
  82   1          // }
  83   1          // for (i = 0; i < 4; i++) {
  84   1          //     c       = AT24C02_ReadByte(i);
  85   1          //     disp[0] = c;
  86   1          //     disp[1] = '\0';
  87   1          //     LCD_ShowString(2, 10 + i,disp);
  88   1          // }
  89   1      }
  90          uchar *Read_Data()
  91          {
  92   1          uchar i;
  93   1          char ch[21];
  94   1          char *test;
  95   1          uchar *Receive_String;
  96   1          uchar *location;
  97   1          Receive_String = UART_GetString();
  98   1          // memset(StrBUFF, 0, 20);
  99   1          if (strstr(Receive_String, "AT+T")) {
 100   2              for (i = 0; i < FLASH_SIZE; i++) {
 101   3                  // 发送数据到电脑端
 102   3                  ch[i] = AT24C02_ReadByte(i);
 103   3                  // UART
 104   3              }
 105   2              ch[FLASH_SIZE] = '\0';
 106   2              // LCD_ShowString(2, 1, ch);
 107   2              // LCD_ShowString(2, 10, (char *)FLASH_SIZE);
 108   2              UART_SendString(ch);
 109   2              UART_SendString("\r\n");
 110   2          }
 111   1          if (strstr(Receive_String, "AT+Stop")) {
 112   2              return;
*** WARNING C173 IN LINE 112 OF main.c: missing return-expression
 113   2          }
 114   1          if (strstr(Receive_String, "AT+Begin")) {
 115   2              RL1 = 1;
C51 COMPILER V9.54   MAIN                                                                  12/24/2024 17:11:04 PAGE 3   

 116   2              return;
*** WARNING C173 IN LINE 116 OF main.c: missing return-expression
 117   2          }
 118   1          if (strstr(Receive_String, "AT+End")) {
 119   2              RL1 = 0;
 120   2              return;
*** WARNING C173 IN LINE 120 OF main.c: missing return-expression
 121   2          }
 122   1          if (strstr(Receive_String, "t")) {
 123   2              // sprintf(test, "%d%d", Receive_String[1], Receive_String[2]);
 124   2              // DS1302_Time[3] = atoi(test);
 125   2              // sprintf(test, "%d%d", Receive_String[3], Receive_String[4]);
 126   2              // DS1302_Time[4] = atoi(test);
 127   2              // sprintf(test, "%d%d", Receive_String[5], Receive_String[6]);
 128   2              // DS1302_Time[5] = atoi(test);
 129   2              // DS1302_SetTime();
 130   2              return;
*** WARNING C173 IN LINE 130 OF main.c: missing return-expression
 131   2          }
 132   1          return ch;
 133   1      }
*** WARNING C280 IN LINE 94 OF main.c: 'test': unreferenced local variable
*** WARNING C280 IN LINE 96 OF main.c: 'location': unreferenced local variable
 134          void Read_Temp()
 135          {
 136   1          DS18B20_ConvertT();
 137   1          T = DS18B20_ReadT();
 138   1      }
 139          void Night_Off_RL1(void)
 140          {
 141   1          if (DS1302_Time[3] >= 22 | DS1302_Time[3] <= 7) {
 142   2              RL1        = 0;
 143   2              BUZZER     = 0; // 晚上22-早上7点关掉加热，蜂鸣器不响
 144   2              night_flag = 1;
 145   2          } else {
 146   2              night_flag = 0;
 147   2          }
 148   1      }
 149          void Temp_Show()
 150          {
 151   1          Read_Temp();
 152   1      
 153   1          sprintf(tmp_show, "temp:%3.0f", T);
 154   1          LCD_ShowString(1, 1, tmp_show);
 155   1          if (T<Temp_low | T> Temp_high) {
 156   2              if (night_flag == 0) {
 157   3                  BUZZER = 1;
 158   3              }
 159   2              // 温度控制
 160   2              if (T < Temp_low) {
 161   3      
 162   3                  LCD_ShowString(1, 9, "  cold!");
 163   3                  RL1   = 1;
 164   3                  count = 1;
 165   3      
 166   3              } else if (T > Temp_high) {
 167   3                  LCD_ShowString(1, 9, "  hot!");
 168   3                  count = 1;
 169   3                  RL1   = 0;
 170   3              }
 171   2          } else {
 172   2              if (count == 1) {
C51 COMPILER V9.54   MAIN                                                                  12/24/2024 17:11:04 PAGE 4   

 173   3                  count = 0;
 174   3                  LCD_ShowString(1, 9, "                "); // 清空第 1 行（16 个空格）
 175   3              }
 176   2              LCD_ShowString(1, 9, " Normal!"); // 显示 "Normal!"
 177   2              BUZZER = 0;
 178   2              RL1    = 0;
 179   2          }
 180   1      }
 181          void TimeShow(void) // 时间显示功能
 182          {
 183   1          DS1302_ReadTime();                    // 读取时间
 184   1                                                // LCD_ShowNum(1,1,DS1302_Time[0],2);//显示年
 185   1                                                // LCD_ShowNum(1,4,DS1302_Time[1],2);//显示月
 186   1                                                // LCD_ShowNum(1,7,DS1302_Time[2],2);//显示日
 187   1                                                // LCD_ShowNum(2,1,DS1302_Time[3],2);//显示时
 188   1                                                // LCD_ShowNum(2,4,DS1302_Time[4],2);//显示分
 189   1                                                // LCD_ShowNum(2,7,DS1302_Time[5],2);//显示秒
 190   1          LCD_ShowNum(2, 1, DS1302_Time[3], 2); // 显示时
 191   1          LCD_ShowNum(2, 4, DS1302_Time[4], 2); // 显示分
 192   1          LCD_ShowNum(2, 7, DS1302_Time[5], 2); // 显示秒
 193   1      }
*** WARNING C291 IN LINE 133 OF main.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    745    ----
   CONSTANT SIZE    =    101    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22      33
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  7 WARNING(S),  0 ERROR(S)
